name: Java CI with Gradle

on:
  push:
    branches: [ master ]
env:
  GRADLE_USER_HOME: .gradle
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: |
          sudo mv /Library/Developer/CommandLineTools/SDKs/* /tmp
          sudo xcode-select -switch /Applications/Xcode.app
          /usr/bin/xcodebuild -version
          ./gradlew jnigen jnigenBuild
      - name: Upload macOS/iOS natives
        uses: actions/upload-artifact@v3
        with:
          name: macos-natives
          path: gizmo/libs

  linux:
    needs: macos
    runs-on: ubuntu-20.04
    container:
      image: ubuntu:18.04
    env:
      ORG_GRADLE_PROJECT_GITHUB_USERNAME: ${{ github.actor }}
      ORG_GRADLE_PROJECT_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ORG_GRADLE_PROJECT_NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
      ORG_GRADLE_PROJECT_NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      NDK_HOME: /usr/local/lib/android/sdk/ndk-bundle
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
        run: |
          # ubuntu dockerfile is very minimal (only 122 packages are installed)
          # need to install updated git (from official git ppa)
          apt update
          apt install -y software-properties-common
          add-apt-repository ppa:git-core/ppa -y
          # install dependencies expected by other steps
          apt update
          apt install -y git \
          curl \
          ca-certificates \
          wget \
          bzip2 \
          zip \
          unzip \
          xz-utils \
          maven \
          ant sudo locales

          # set Locale to en_US.UTF-8 (avoids hang during compilation)
          locale-gen en_US.UTF-8
          echo "LANG=en_US.UTF-8" >> $GITHUB_ENV
          echo "LANGUAGE=en_US.UTF-8" >> $GITHUB_ENV
          echo "LC_ALL=en_US.UTF-8" >> $GITHUB_ENV
      - name: Download macOS/iOS natives
        uses: actions/download-artifact@v3
        with:
          name: macos-natives
          path: gizmo/libs
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew jnigen jnigenBuild
      - name: Publish to maven
        if: ${{ github.event_name == 'push' }}
        run: ./gradlew publish
      - name: Upload all output libs
        uses: actions/upload-artifact@v3
        with:
          name: output-libs
          path: gizmo/build/libs/
